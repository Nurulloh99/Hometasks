using System.Text;

namespace firstRep_by_VStudio
{
    internal class Program
    {
        // 1st 
        public static string helloName(string str)
        {
            var hello = "Hello !";
            var changedName = hello.Insert(6, str);
            return changedName;
        }

        // 2nd
        public static string makeAbba(string firstWord, string secondWord)
        {
            var rightWord = firstWord + secondWord;
            var leftWord = secondWord + firstWord;

            return rightWord + leftWord;

        }

        // 3rd
        public static string makeOutWord(string firstWord, string secondWord)
        {
            var result = firstWord.Insert(firstWord.Length / 2, secondWord);
            return result;
        }

        // 4th
        public static string extraEnd(string str)
        {
            var lastTwoWord = str.Substring(str.Length - 2);
            var result = "";
            for (var i = 1; i <= 3; i++)
            {
                result += lastTwoWord;
            }
            return result;
        }

        // 5th
        public static string firstTwo(string str)
        {
            if (str.Length > 2)
            {
                var firstTwoWords = str.Substring(0, 2);
                return firstTwoWords;
            }
            else
            {
                return str;
            }
        }

        // 6th
        public static string firstHalf(string str)
        {
            if (str.Length % 2 == 0)
            {
                var firstHalfWords = str.Substring(0, str.Length / 2);
                return firstHalfWords;
            }
            else
            {
                return "ERROR";
            }
        }

        // 7th
        public static string withoutEnd(string str)
        {
            var outOfFirstAndLastWords = str.Substring(1, str.Length - 2);
            return outOfFirstAndLastWords;
        }

        // 8th
        public static string comboString(string firstValue, string secondValue)
        {
            if (firstValue.Length > secondValue.Length)
            {
                return secondValue + firstValue + secondValue;
            }
            else
            {
                return firstValue + secondValue + firstValue;
            }
        }

        // 9th
        public static string nonStart(string firstValue, string secondValue)
        {
            var result = firstValue.Substring(1);
            var secondResult = secondValue.Substring(1);
            return result + secondResult;
        }

        // 10th
        public static string left2(string firstValue)
        {
            var result = firstValue.Substring(0, 2);
            var secondResult = firstValue.Substring(2);
            return secondResult + result;
        }

        // 12th
        public static string nTwice(string str, int value)
        {
            var result = str.Substring(0, value) + str.Substring(str.Length - value);
            return result;
        }

        // 13rd
        public static string middleThree(string str)
        {
            var strLength = str.Length;
            var result = "";
            if (strLength % 2 != 0)
            {
                //var amount = strLength / 2;

                //result += str[amount - 1];
                //result += str[amount];
                //result += str[amount + 1];
                result += str.Substring(str.Length / 2 - 1, 3);
            }
            return result;
        }

        // 14th
        public static string conCat(string firstValue, string secondValue)
        {
            if (firstValue[firstValue.Length - 1] == secondValue[0])
            {
                secondValue = secondValue.Remove(0, 1);
            }
            return firstValue + secondValue;
        }

        // 15th
        public static string lastTwo(string str)
        {
            var changedLastWords = new StringBuilder(str);

            var helper = changedLastWords[changedLastWords.Length - 1];
            changedLastWords[changedLastWords.Length - 1] = changedLastWords[changedLastWords.Length - 2];
            changedLastWords[changedLastWords.Length - 2] = helper;

            return changedLastWords.ToString();
        }

        // 16th
        public static string seeColor(string str)
        {
            var red = str.Substring(0, 3);
            var blue = str.Substring(0, 4);

            if (red == "red")
            {
                return red;
            }
            else if (blue == "blue")
            {
                return blue;
            }
            else
            {
                return "";
            }
        }

        // 17th
        public static bool frontAgain(string str)
        {
            var firstTwoWords = str.Substring(0, 2);
            var lastTwoWords = str.Substring(str.Length - 2);

            return firstTwoWords == lastTwoWords;
        }

        // 18th
        public static string minCat(string firstString, string secondString)
        {
            var firstHelper = "";
            if (firstString.Length > secondString.Length)
            {
                firstHelper = firstString.Substring(firstString.Length - secondString.Length) + secondString;
            }
            else
            {
                firstHelper = firstString + secondString.Substring(secondString.Length - firstString.Length);
            }
            return firstHelper;
        }

        // 19th
        public static string deFront(string firstString)
        {
            if (firstString[0] == 'a' && firstString[1] == 'b')
            {
                return firstString;
            }
            else if (firstString[0] == 'a')
            {
                firstString = firstString.Remove(1, 1);
            }
            else if (firstString[1] == 'b')
            {
                firstString = firstString.Remove(0, 1);
            }
            else
            {
                firstString = firstString.Remove(0, 2);
            }
            return firstString;
        }

        // 20th
        public static string withoutX(string firstString)
        {
            if (firstString[0] == 'x' && firstString[firstString.Length - 1] == 'x')
            {
                firstString = firstString.Substring(1, firstString.Length - 2);
            }
            else if (firstString[0] == 'x')
            {
                firstString = firstString.Remove(0, 1);
            }
            else if (firstString[firstString.Length - 1] == 'x')
            {
                firstString = firstString.Remove(firstString.Length - 1, 1);
            }
            return firstString;
        }

        static void Main(string[] args)
        {
            Console.Write("Enter name: ");
            var firstWord = Console.ReadLine();
            /*
            Console.Write("Enter name: ");
            var secondWord = Console.ReadLine();
            */

            Console.WriteLine(withoutX(firstWord));
            Main(args);


        }

    }
}